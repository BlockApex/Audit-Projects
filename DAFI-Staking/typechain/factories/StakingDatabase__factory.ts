/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StakingDatabase,
  StakingDatabaseInterface,
} from "../StakingDatabase";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_currentWeight",
        type: "uint256",
      },
    ],
    name: "addAccumulatedPoolWeight",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "addDemandFactor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountToAdd",
        type: "uint256",
      },
    ],
    name: "addPoolTotalStaked",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addToFeesDeposited",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addTodDAFIBurned",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "demandFactorHistory",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAccumulatedPoolWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getDemandFactor",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct DemandFactor",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDemandFactorLastest",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct DemandFactor",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDistributePerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFeesDeposited",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxDAFI",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMinimumStakeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMinimumStakePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPool",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "currentAccumulatedWeight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalStaked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdatedOn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastDemandFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentPoolWeight",
            type: "uint256",
          },
        ],
        internalType: "struct Pool",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolLastUpdatedOn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProgramDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProgramEndedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardFee",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakingStartTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUserCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserStake",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdOn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdatedOn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastStakingAccumulatedWeight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalUnclaimed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastDemandFactor",
            type: "uint256",
          },
        ],
        internalType: "struct Stake",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getdDAFIBurned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getdDAFIDistributed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isProgramEnded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "markProgramEnded",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rewardsBeingClaimed",
        type: "uint256",
      },
    ],
    name: "markRewardsClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_distributePerSec",
        type: "uint256",
      },
    ],
    name: "setDistributePerSecond",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setMaxDAFI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimumStakeAmount",
        type: "uint256",
      },
    ],
    name: "setMinimumStakeAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimumStakePeriod",
        type: "uint256",
      },
    ],
    name: "setMinimumStakePeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "setProgramDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "percentage",
        type: "uint8",
      },
    ],
    name: "setRewardFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimumStakeDays",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minimumStakeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxDAFI",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_rewardFee",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "durationInDays",
        type: "uint256",
      },
    ],
    name: "setStakingParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setStakingStartTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_distributed",
        type: "uint256",
      },
    ],
    name: "setdDAFIDistributed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountToSub",
        type: "uint256",
      },
    ],
    name: "subPoolTotalStaked",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "totalStakedFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "updateStakeAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastDemandFactor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentAccumulatedWeight",
        type: "uint256",
      },
    ],
    name: "updateUserStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "userExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "createdOn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdatedOn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastStakingAccumulatedWeight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalUnclaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastDemandFactor",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002161001c610026565b61002a565b61007a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611703806100896000396000f3fe608060405234801561001057600080fd5b50600436106103365760003560e01c806376289f38116101b2578063c5d36c3d116100f9578063e878ec9b116100a2578063f2fde38b1161007c578063f2fde38b14610644578063f80f5dd514610657578063fa0e04061461066a578063fb8b03961461067d57610336565b8063e878ec9b14610621578063e898a89914610634578063e9980f521461063c57610336565b8063d3de4e2a116100d3578063d3de4e2a146105fe578063def4aa4c14610606578063e040b36e1461061957610336565b8063c5d36c3d146105c5578063c9b4b210146105d8578063d2199414146105eb57610336565b8063939da5401161015b578063b5cb15f711610135578063b5cb15f714610595578063bbadc93a1461059d578063bea4ebdc146105bd57610336565b8063939da54014610567578063a26e9f901461057a578063af41bfd81461058257610336565b80638da5cb5b1161018c5780638da5cb5b146105255780638da7ad231461053a57806391d34c5b1461055f57610336565b806376289f38146104ea57806378b627f5146104ff57806378c8cda71461051257610336565b8063442c9cb41161028157806352ed6b451161022a5780635ebf0b5d116102045780635ebf0b5d146104b45780636374299e146104bc57806368735fc7146104cf578063715018a6146104e257610336565b806352ed6b4514610478578063589775031461048b5780635a3ce6c5146104ac57610336565b806349bb73191161025b57806349bb73191461043d5780634b0c3b7d146104505780634b341aed1461046557610336565b8063442c9cb41461040f57806344d558a114610422578063478a70001461043557610336565b80632406464a116102e35780633765cf02116102bd5780633765cf02146103ec5780633d01f0ff146103f45780633f10887d1461040757610336565b80632406464a146103be5780632bbe058d146103c657806331ce8ee1146103d957610336565b80630e666e49116103145780630e666e49146103835780631279f91a146103a35780631e7be210146103ab57610336565b8063026b1d5f1461033b5780630917e776146103595780630d29fcd41461036e575b600080fd5b610343610685565b60405161035091906115c7565b60405180910390f35b6103616106c2565b6040516103509190611645565b61038161037c3660046113c8565b6106c8565b005b610396610391366004611346565b610705565b6040516103509190611475565b610361610737565b6103966103b9366004611346565b61073d565b610361610752565b6103816103d43660046113c8565b610758565b6103816103e73660046113c8565b6107ad565b6103616107e1565b6103816104023660046113e0565b6107e7565b61036161088e565b61038161041d3660046113c8565b6108c4565b610381610430366004611367565b610907565b610361610952565b61038161044b366004611367565b610958565b6104586109c1565b60405161035091906115b0565b610361610473366004611346565b610a29565b6103816104863660046113c8565b610a44565b61049e6104993660046113c8565b610a87565b60405161035092919061164e565b610361610ab5565b610381610abb565b6103816104ca366004611367565b610afd565b6103816104dd3660046113c8565b610bca565b610381610c07565b6104f2610c52565b6040516103509190611684565b61038161050d3660046113c8565b610c5b565b610381610520366004611346565b610c9e565b61052d610d49565b6040516103509190611461565b61054d610548366004611346565b610d58565b6040516103509695949392919061165c565b610361610d8f565b6103816105753660046113c8565b610d95565b610361610dc9565b6103816105903660046113c8565b610dcf565b610361610e03565b6105b06105ab366004611346565b610e09565b6040516103509190611601565b610381610e70565b6103816105d3366004611390565b610ea5565b6104586105e63660046113c8565b610f21565b6103816105f9366004611401565b610fad565b610361611026565b610381610614366004611447565b61102c565b610396611071565b61038161062f3660046113c8565b6110aa565b6103616110de565b6103616110e4565b610381610652366004611346565b61111a565b610381610665366004611346565b61118b565b6103816106783660046113c8565b611204565b610361611238565b61068d61129f565b506040805160a08101825260055481526006546020820152600754918101919091526008546060820152600954608082015290565b60065490565b3360009081526001602052604090205460ff166107005760405162461bcd60e51b81526004016106f790611553565b60405180910390fd5b600e55565b6001600160a01b03811660009081526002602052604081206001015461072c57600061072f565b60015b90505b919050565b60115490565b60016020526000908152604090205460ff1681565b60105490565b3360009081526001602052604090205460ff166107875760405162461bcd60e51b81526004016106f790611553565b600554610795908290611692565b6005556107a06109c1565b5160085542600755600955565b3360009081526001602052604090205460ff166107dc5760405162461bcd60e51b81526004016106f790611553565b600f55565b600e5490565b3360009081526001602052604090205460ff166108165760405162461bcd60e51b81526004016106f790611553565b60408051808201909152918252602082019081526004805460018101825560009190915291517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b600290930292830155517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c90910155565b3360009081526001602052604081205460ff166108bd5760405162461bcd60e51b81526004016106f790611553565b5060055490565b3360009081526001602052604090205460ff166108f35760405162461bcd60e51b81526004016106f790611553565b6006546109019082906116c9565b60065550565b3360009081526001602052604090205460ff166109365760405162461bcd60e51b81526004016106f790611553565b6001600160a01b03909116600090815260026020526040902055565b60155490565b3360009081526001602052604090205460ff166109875760405162461bcd60e51b81526004016106f790611553565b6001600160a01b038216600090815260026020526040902060048101546109af9083906116c9565b60048201556005546003909101555050565b6109c96112ce565b600480546109d9906001906116c9565b815481106109f757634e487b7160e01b600052603260045260246000fd5b906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050905090565b6001600160a01b031660009081526002602052604090205490565b3360009081526001602052604090205460ff16610a735760405162461bcd60e51b81526004016106f790611553565b80600b54610a819190611692565b600b5550565b60048181548110610a9757600080fd5b60009182526020909120600290910201805460019091015490915082565b600f5490565b3360009081526001602052604090205460ff16610aea5760405162461bcd60e51b81526004016106f790611553565b6014805460ff1916600117905542601555565b3360009081526001602052604090205460ff16610b2c5760405162461bcd60e51b81526004016106f790611553565b6001600160a01b03821660009081526002602052604090206001810154610bac57426001828101919091556003805491820181556000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0385161790555b81816000016000828254610bc09190611692565b9091555050505050565b3360009081526001602052604090205460ff16610bf95760405162461bcd60e51b81526004016106f790611553565b600654610901908290611692565b610c0f61123e565b6001600160a01b0316610c20610d49565b6001600160a01b031614610c465760405162461bcd60e51b81526004016106f79061151e565b610c506000611242565b565b600d5460ff1690565b3360009081526001602052604090205460ff16610c8a5760405162461bcd60e51b81526004016106f790611553565b80600c54610c989190611692565b600c5550565b610ca661123e565b6001600160a01b0316610cb7610d49565b6001600160a01b031614610cdd5760405162461bcd60e51b81526004016106f79061151e565b6001600160a01b038116610cf057600080fd5b6001600160a01b03811660009081526001602052604090205460ff16610d285760405162461bcd60e51b81526004016106f7906114dd565b6001600160a01b03166000908152600160205260409020805460ff19169055565b6000546001600160a01b031690565b6002602081905260009182526040909120805460018201549282015460038301546004840154600590940154929493919290919086565b600b5490565b3360009081526001602052604090205460ff16610dc45760405162461bcd60e51b81526004016106f790611553565b601355565b600c5490565b3360009081526001602052604090205460ff16610dfe5760405162461bcd60e51b81526004016106f790611553565b601155565b60035490565b610e116112e8565b506001600160a01b0316600090815260026020818152604092839020835160c08101855281548152600182015492810192909252918201549281019290925260038101546060830152600481015460808301526005015460a082015290565b3360009081526001602052604090205460ff16610e9f5760405162461bcd60e51b81526004016106f790611553565b42601055565b3360009081526001602052604090205460ff16610ed45760405162461bcd60e51b81526004016106f790611553565b6001600160a01b0384166000908152600260205260408120600381018390556005810184905560048101805491928692610f0f908490611692565b90915550504260029091015550505050565b610f296112ce565b3360009081526001602052604090205460ff16610f585760405162461bcd60e51b81526004016106f790611553565b60048281548110610f7957634e487b7160e01b600052603260045260246000fd5b9060005260206000209060020201604051806040016040529081600082015481526020016001820154815250509050919050565b3360009081526001602052604090205460ff16610fdc5760405162461bcd60e51b81526004016106f790611553565b610fec6103e786620151806116aa565b610ff4610e70565b610ffd846106c8565b61100683611204565b61100f8261102c565b61101f61059082620151806116aa565b5050505050565b60135490565b3360009081526001602052604090205460ff1661105b5760405162461bcd60e51b81526004016106f790611553565b600d805460ff191660ff92909216919091179055565b3360009081526001602052604081205460ff166110a05760405162461bcd60e51b81526004016106f790611553565b5060145460ff1690565b3360009081526001602052604090205460ff166110d95760405162461bcd60e51b81526004016106f790611553565b601255565b60125490565b3360009081526001602052604081205460ff166111135760405162461bcd60e51b81526004016106f790611553565b5060075490565b61112261123e565b6001600160a01b0316611133610d49565b6001600160a01b0316146111595760405162461bcd60e51b81526004016106f79061151e565b6001600160a01b03811661117f5760405162461bcd60e51b81526004016106f790611480565b61118881611242565b50565b61119361123e565b6001600160a01b03166111a4610d49565b6001600160a01b0316146111ca5760405162461bcd60e51b81526004016106f79061151e565b6001600160a01b0381166111dd57600080fd5b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b3360009081526001602052604090205460ff166112335760405162461bcd60e51b81526004016106f790611553565b600a55565b600a5490565b3390565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b80356001600160a01b038116811461073257600080fd5b803560ff8116811461073257600080fd5b600060208284031215611357578081fd5b6113608261131e565b9392505050565b60008060408385031215611379578081fd5b6113828361131e565b946020939093013593505050565b600080600080608085870312156113a5578182fd5b6113ae8561131e565b966020860135965060408601359560600135945092505050565b6000602082840312156113d9578081fd5b5035919050565b600080604083850312156113f2578182fd5b50508035926020909101359150565b600080600080600060a08688031215611418578081fd5b85359450602086013593506040860135925061143660608701611335565b949793965091946080013592915050565b600060208284031215611458578081fd5b61136082611335565b6001600160a01b0391909116815260200190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b60208082526021908201527f4163636f756e7420646f65736e7420657869737420696e2077686974656c69736040820152601d60fa1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526026908201527f4e6f7420617574686f72697573656420746f206163636573732074686520646160408201527f7461626173650000000000000000000000000000000000000000000000000000606082015260800190565b815181526020918201519181019190915260400190565b600060a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b90815260200190565b918252602082015260400190565b958652602086019490945260408501929092526060840152608083015260a082015260c00190565b60ff91909116815260200190565b600082198211156116a5576116a56116e0565b500190565b60008160001904831182151516156116c4576116c46116e0565b500290565b6000828210156116db576116db6116e0565b500390565b634e487b7160e01b600052601160045260246000fdfea164736f6c6343000800000a";

export class StakingDatabase__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakingDatabase> {
    return super.deploy(overrides || {}) as Promise<StakingDatabase>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StakingDatabase {
    return super.attach(address) as StakingDatabase;
  }
  connect(signer: Signer): StakingDatabase__factory {
    return super.connect(signer) as StakingDatabase__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingDatabaseInterface {
    return new utils.Interface(_abi) as StakingDatabaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingDatabase {
    return new Contract(address, _abi, signerOrProvider) as StakingDatabase;
  }
}
