/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenPool, TokenPoolInterface } from "../TokenPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenToRescue",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "rescueFunds",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610a72380380610a7283398101604081905261002f916100a8565b61003f61003a610054565b610058565b60601b6001600160601b0319166080526100d6565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100b9578081fd5b81516001600160a01b03811681146100cf578182fd5b9392505050565b60805160601c610969610109600039600081816101e00152818161040c015281816104b6015261062c01526109696000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063a9059cbb11610076578063f2fde38b1161005b578063f2fde38b14610159578063f80f5dd51461016c578063fc0c546a1461017f576100be565b8063a9059cbb14610131578063b69ef8a814610144576100be565b8063715018a6116100a7578063715018a6146100ff57806378c8cda7146101095780638da5cb5b1461011c576100be565b80631e7be210146100c35780636ccae054146100ec575b600080fd5b6100d66100d13660046106ba565b610187565b6040516100e391906107a6565b60405180910390f35b6100d66100fa366004610721565b61019c565b6101076102ae565b005b6101076101173660046106ba565b6102f9565b6101246103a4565b6040516100e39190610779565b6100d661013f3660046106d6565b6103b3565b61014c61049c565b6040516100e3919061093e565b6101076101673660046106ba565b610540565b61010761017a3660046106ba565b6105b1565b61012461062a565b60016020526000908152604090205460ff1681565b3360009081526001602052604081205460ff166101d45760405162461bcd60e51b81526004016101cb906107b1565b60405180910390fd5b836001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614156102265760405162461bcd60e51b81526004016101cb906108e1565b60405163a9059cbb60e01b81526001600160a01b0385169063a9059cbb90610254908690869060040161078d565b602060405180830381600087803b15801561026e57600080fd5b505af1158015610282573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a69190610701565b949350505050565b6102b661064e565b6001600160a01b03166102c76103a4565b6001600160a01b0316146102ed5760405162461bcd60e51b81526004016101cb906108ac565b6102f76000610652565b565b61030161064e565b6001600160a01b03166103126103a4565b6001600160a01b0316146103385760405162461bcd60e51b81526004016101cb906108ac565b6001600160a01b03811661034b57600080fd5b6001600160a01b03811660009081526001602052604090205460ff166103835760405162461bcd60e51b81526004016101cb9061086b565b6001600160a01b03166000908152600160205260409020805460ff19169055565b6000546001600160a01b031690565b3360009081526001602052604081205460ff166103e25760405162461bcd60e51b81526004016101cb906107b1565b6001600160a01b0383166103f557600080fd5b60405163a9059cbb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90610443908690869060040161078d565b602060405180830381600087803b15801561045d57600080fd5b505af1158015610471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104959190610701565b9392505050565b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906104eb903090600401610779565b60206040518083038186803b15801561050357600080fd5b505afa158015610517573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053b9190610761565b905090565b61054861064e565b6001600160a01b03166105596103a4565b6001600160a01b03161461057f5760405162461bcd60e51b81526004016101cb906108ac565b6001600160a01b0381166105a55760405162461bcd60e51b81526004016101cb9061080e565b6105ae81610652565b50565b6105b961064e565b6001600160a01b03166105ca6103a4565b6001600160a01b0316146105f05760405162461bcd60e51b81526004016101cb906108ac565b6001600160a01b03811661060357600080fd5b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b7f000000000000000000000000000000000000000000000000000000000000000081565b3390565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156106cb578081fd5b813561049581610947565b600080604083850312156106e8578081fd5b82356106f381610947565b946020939093013593505050565b600060208284031215610712578081fd5b81518015158114610495578182fd5b600080600060608486031215610735578081fd5b833561074081610947565b9250602084013561075081610947565b929592945050506040919091013590565b600060208284031215610772578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526027908201527f4e6f7420617574686f726973656420746f206163636573732074686520746f6b60408201527f656e20706f6f6c00000000000000000000000000000000000000000000000000606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b60208082526021908201527f4163636f756e7420646f65736e7420657869737420696e2077686974656c69736040820152601d60fa1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526032908201527f546f6b656e506f6f6c3a2043616e6e6f7420636c61696d20746f6b656e20686560408201527f6c642062792074686520636f6e74726163740000000000000000000000000000606082015260800190565b90815260200190565b6001600160a01b03811681146105ae57600080fdfea164736f6c6343000800000a";

export class TokenPool__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenPool> {
    return super.deploy(_token, overrides || {}) as Promise<TokenPool>;
  }
  getDeployTransaction(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  attach(address: string): TokenPool {
    return super.attach(address) as TokenPool;
  }
  connect(signer: Signer): TokenPool__factory {
    return super.connect(signer) as TokenPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenPoolInterface {
    return new utils.Interface(_abi) as TokenPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenPool {
    return new Contract(address, _abi, signerOrProvider) as TokenPool;
  }
}
