/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20T, ERC20TInterface } from "../ERC20T";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_decimals",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000f0038038062000f00833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b506040526020908101518551909350620001b9925060039186019062000368565b508151620001cf90600490602085019062000368565b50620001e9336c0c9f2c9cd04674edea40000000620001f2565b50505062000414565b6001600160a01b0382166200024e576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6200025c6000838362000301565b62000278816002546200030660201b6200067a1790919060201c565b6002556001600160a01b03821660009081526020818152604090912054620002ab9183906200067a62000306821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b60008282018381101562000361576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620003a05760008555620003eb565b82601f10620003bb57805160ff1916838001178555620003eb565b82800160010185558215620003eb579182015b82811115620003eb578251825591602001919060010190620003ce565b50620003f9929150620003fd565b5090565b5b80821115620003f95760008155600101620003fe565b610adc80620004246000396000f3fe608060405234801561001057600080fd5b50600436106100a45760003560e01c806306fdde03146100a9578063095ea7b31461012657806318160ddd1461016657806323b872dd14610180578063313ce567146101b657806339509351146101d45780634e6ec2471461020057806370a082311461022e57806395d89b4114610254578063a457c2d71461025c578063a9059cbb14610288578063dd62ed3e146102b4575b600080fd5b6100b16102e2565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100eb5781810151838201526020016100d3565b50505050905090810190601f1680156101185780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101526004803603604081101561013c57600080fd5b506001600160a01b038135169060200135610378565b604080519115158252519081900360200190f35b61016e610395565b60408051918252519081900360200190f35b6101526004803603606081101561019657600080fd5b506001600160a01b0381358116916020810135909116906040013561039b565b6101be610422565b6040805160ff9092168252519081900360200190f35b610152600480360360408110156101ea57600080fd5b506001600160a01b03813516906020013561042b565b61022c6004803603604081101561021657600080fd5b506001600160a01b038135169060200135610479565b005b61016e6004803603602081101561024457600080fd5b50356001600160a01b0316610557565b6100b1610572565b6101526004803603604081101561027257600080fd5b506001600160a01b0381351690602001356105d3565b6101526004803603604081101561029e57600080fd5b506001600160a01b03813516906020013561063b565b61016e600480360360408110156102ca57600080fd5b506001600160a01b038135811691602001351661064f565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561036e5780601f106103435761010080835404028352916020019161036e565b820191906000526020600020905b81548152906001019060200180831161035157829003601f168201915b5050505050905090565b600061038c6103856106d9565b84846106dd565b50600192915050565b60025490565b60006103a88484846107c9565b610418846103b46106d9565b61041385604051806060016040528060288152602001610a1a602891396001600160a01b038a166000908152600160205260408120906103f26106d9565b6001600160a01b031681526020810191909152604001600020549190610912565b6106dd565b5060019392505050565b60055460ff1690565b600061038c6104386106d9565b8461041385600160006104496106d9565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549061067a565b6001600160a01b0382166104d4576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6104e0600083836109a9565b6002546104ed908261067a565b6002556001600160a01b038216600090815260208190526040902054610513908261067a565b6001600160a01b038316600081815260208181526040808320949094558351858152935192939192600080516020610a428339815191529281900390910190a35050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561036e5780601f106103435761010080835404028352916020019161036e565b600061038c6105e06106d9565b8461041385604051806060016040528060258152602001610aab602591396001600061060a6106d9565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610912565b600061038c6106486106d9565b84846107c9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000828201838110156106d2576040805162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b0383166107225760405162461bcd60e51b8152600401808060200182810382526024815260200180610a876024913960400191505060405180910390fd5b6001600160a01b0382166107675760405162461bcd60e51b81526004018080602001828103825260228152602001806109d26022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661080e5760405162461bcd60e51b8152600401808060200182810382526025815260200180610a626025913960400191505060405180910390fd5b6001600160a01b0382166108535760405162461bcd60e51b81526004018080602001828103825260238152602001806109af6023913960400191505060405180910390fd5b61085e8383836109a9565b61089b816040518060600160405280602681526020016109f4602691396001600160a01b0386166000908152602081905260409020549190610912565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546108ca908261067a565b6001600160a01b03808416600081815260208181526040918290209490945580518581529051919392871692600080516020610a4283398151915292918290030190a3505050565b600081848411156109a15760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561096657818101518382015260200161094e565b50505050905090810190601f1680156109935780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa164736f6c6343000706000a";

export class ERC20T__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    name_: string,
    symbol_: string,
    _decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20T> {
    return super.deploy(
      name_,
      symbol_,
      _decimals,
      overrides || {}
    ) as Promise<ERC20T>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    _decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      _decimals,
      overrides || {}
    );
  }
  attach(address: string): ERC20T {
    return super.attach(address) as ERC20T;
  }
  connect(signer: Signer): ERC20T__factory {
    return super.connect(signer) as ERC20T__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TInterface {
    return new utils.Interface(_abi) as ERC20TInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20T {
    return new Contract(address, _abi, signerOrProvider) as ERC20T;
  }
}
