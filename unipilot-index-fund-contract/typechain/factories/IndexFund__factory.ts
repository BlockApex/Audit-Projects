/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { IndexFund, IndexFundInterface } from "../IndexFund";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_timelock",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_lockedFundAddresses",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_Pilot",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_accounts",
        type: "address[]",
      },
    ],
    name: "addLockedFundsAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "circulatingSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "circulatingSupply",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_newVersion",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "migrateFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "removeLockedFundsAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokenAddresses",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_pilotAmount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620016923803806200169283398101604081905262000034916200012c565b600180546001600160a01b0319166001600160a01b0385161790558151620000649060029060208501906200008e565b50600080546001600160a01b0319166001600160a01b039290921691909117905550620002449050565b828054828255906000526020600020908101928215620000e6579160200282015b82811115620000e657825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620000af565b50620000f4929150620000f8565b5090565b5b80821115620000f45760008155600101620000f9565b80516001600160a01b03811681146200012757600080fd5b919050565b6000806000606084860312156200014257600080fd5b6200014d846200010f565b602085810151919450906001600160401b03808211156200016d57600080fd5b818701915087601f8301126200018257600080fd5b8151818111156200019757620001976200022e565b8060051b604051601f19603f83011681018181108582111715620001bf57620001bf6200022e565b604052828152858101935084860182860187018c1015620001df57600080fd5b600095505b838610156200020d57620001f8816200010f565b855260019590950194938601938601620001e4565b5080975050505050505062000225604085016200010f565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b61143e80620002546000396000f3fe6080604052600436106100585760003560e01c8063515fdde311610040578063515fdde3146100a15780639358928b146100c1578063e3511faf146100e857005b806317764f0b146100615780634333c5a51461008157005b3661005f57005b005b34801561006d57600080fd5b5061005f61007c3660046111b1565b610108565b34801561008d57600080fd5b5061005f61009c36600461110d565b61028a565b3480156100ad57600080fd5b5061005f6100bc366004611085565b610460565b3480156100cd57600080fd5b506100d661068c565b60405190815260200160405180910390f35b3480156100f457600080fd5b5061005f61010336600461114a565b610856565b60015473ffffffffffffffffffffffffffffffffffffffff16331461018e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f494e4445585f46554e443a3a204e4f545f54494d454c4f434b0000000000000060448201526064015b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600282815481106101b9576101b96113ae565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff161415610243576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f494e4445585f46554e443a3a20454c454d454e545f4e4f545f455849535453006044820152606401610185565b60028181548110610256576102566113ae565b600091825260209091200180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905550565b60015473ffffffffffffffffffffffffffffffffffffffff16331461030b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f494e4445585f46554e443a3a204e4f545f54494d454c4f434b000000000000006044820152606401610185565b60005b81518162ffffff16101561045c57600073ffffffffffffffffffffffffffffffffffffffff16828262ffffff168151811061034b5761034b6113ae565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614156103d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f494e4445585f46554e443a3a205a45524f5f41444452455353000000000000006044820152606401610185565b6002828262ffffff16815181106103ea576103ea6113ae565b60209081029190910181015182546001810184556000938452919092200180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9092169190911790558061045481611323565b91505061030e565b5050565b60015473ffffffffffffffffffffffffffffffffffffffff1633146104e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f494e4445585f46554e443a3a204e4f545f54494d454c4f434b000000000000006044820152606401610185565b3060005b62ffffff81168311156106205761060e828686868562ffffff1681811061050e5761050e6113ae565b90506020020160208101906105239190611068565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015291909116906370a082319060240160206040518083038186803b15801561058c57600080fd5b505afa1580156105a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c491906111ca565b87878662ffffff168181106105db576105db6113ae565b90506020020160208101906105f09190611068565b73ffffffffffffffffffffffffffffffffffffffff16929190610b63565b8061061881611323565b9150506104e5565b5073ffffffffffffffffffffffffffffffffffffffff811631156106865760405173ffffffffffffffffffffffffffffffffffffffff808616919083163180156108fc02916000818181858888f19350505050158015610684573d6000803e3d6000fd5b505b50505050565b60008060005b60025462ffffff821610156107a3576000546002805473ffffffffffffffffffffffffffffffffffffffff909216916370a08231919062ffffff85169081106106dd576106dd6113ae565b60009182526020909120015460405160e083901b7fffffffff0000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff909116600482015260240160206040518083038186803b15801561074d57600080fd5b505afa158015610761573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078591906111ca565b61078f9083611250565b91508061079b81611323565b915050610692565b50600054604080517f18160ddd0000000000000000000000000000000000000000000000000000000081529051839273ffffffffffffffffffffffffffffffffffffffff16916318160ddd916004808301926020929190829003018186803b15801561080e57600080fd5b505afa158015610822573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084691906111ca565b61085091906112e0565b91505090565b600080600061086361068c565b90504233308361087b670de0b6b3a7640000896112a3565b6108859190611268565b6000546040517f79cc679000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152602482018b90529298509116906379cc679090604401600060405180830381600087803b1580156108fb57600080fd5b505af115801561090f573d6000803e3d6000fd5b5050505060005b8851811015610b5857600073ffffffffffffffffffffffffffffffffffffffff16898281518110610949576109496113ae565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614610a2e5788818151811061097e5761097e6113ae565b60209081029190910101516040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8481166004830152909116906370a082319060240160206040518083038186803b1580156109f157600080fd5b505afa158015610a05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2991906111ca565b610a47565b8173ffffffffffffffffffffffffffffffffffffffff16315b95506000670de0b6b3a7640000610a5e89896112a3565b610a689190611268565b9050600073ffffffffffffffffffffffffffffffffffffffff168a8381518110610a9457610a946113ae565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614610b0057610afb84828c8581518110610ace57610ace6113ae565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16610c3f9092919063ffffffff16565b610b45565b60405173ffffffffffffffffffffffffffffffffffffffff85169082156108fc029083906000818181858888f19350505050158015610b43573d6000803e3d6000fd5b505b5080610b5081611346565b915050610916565b505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526106869085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610c9a565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610c959084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401610bbd565b505050565b6000610cfc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610da69092919063ffffffff16565b805190915015610c955780806020019051810190610d1a919061118f565b610c95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610185565b6060610db58484600085610dbf565b90505b9392505050565b606082471015610e51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610185565b843b610eb9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610185565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610ee291906111e3565b60006040518083038185875af1925050503d8060008114610f1f576040519150601f19603f3d011682016040523d82523d6000602084013e610f24565b606091505b5091509150610f34828286610f3f565b979650505050505050565b60608315610f4e575081610db8565b825115610f5e5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018591906111ff565b8035610f9d8161140c565b919050565b600082601f830112610fb357600080fd5b8135602067ffffffffffffffff80831115610fd057610fd06113dd565b8260051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f83011681018181108482111715611013576110136113dd565b6040528481528381019250868401828801850189101561103257600080fd5b600092505b8583101561105c5761104881610f92565b845292840192600192909201918401611037565b50979650505050505050565b60006020828403121561107a57600080fd5b8135610db88161140c565b60008060006040848603121561109a57600080fd5b83356110a58161140c565b9250602084013567ffffffffffffffff808211156110c257600080fd5b818601915086601f8301126110d657600080fd5b8135818111156110e557600080fd5b8760208260051b85010111156110fa57600080fd5b6020830194508093505050509250925092565b60006020828403121561111f57600080fd5b813567ffffffffffffffff81111561113657600080fd5b61114284828501610fa2565b949350505050565b6000806040838503121561115d57600080fd5b823567ffffffffffffffff81111561117457600080fd5b61118085828601610fa2565b95602094909401359450505050565b6000602082840312156111a157600080fd5b81518015158114610db857600080fd5b6000602082840312156111c357600080fd5b5035919050565b6000602082840312156111dc57600080fd5b5051919050565b600082516111f58184602087016112f7565b9190910192915050565b602081526000825180602084015261121e8160408501602087016112f7565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600082198211156112635761126361137f565b500190565b60008261129e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156112db576112db61137f565b500290565b6000828210156112f2576112f261137f565b500390565b60005b838110156113125781810151838201526020016112fa565b838111156106865750506000910152565b600062ffffff8083168181141561133c5761133c61137f565b6001019392505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156113785761137861137f565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461142e57600080fd5b5056fea164736f6c6343000807000a";

export class IndexFund__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _timelock: string,
    _lockedFundAddresses: string[],
    _Pilot: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<IndexFund> {
    return super.deploy(
      _timelock,
      _lockedFundAddresses,
      _Pilot,
      overrides || {}
    ) as Promise<IndexFund>;
  }
  getDeployTransaction(
    _timelock: string,
    _lockedFundAddresses: string[],
    _Pilot: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _timelock,
      _lockedFundAddresses,
      _Pilot,
      overrides || {}
    );
  }
  attach(address: string): IndexFund {
    return super.attach(address) as IndexFund;
  }
  connect(signer: Signer): IndexFund__factory {
    return super.connect(signer) as IndexFund__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IndexFundInterface {
    return new utils.Interface(_abi) as IndexFundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IndexFund {
    return new Contract(address, _abi, signerOrProvider) as IndexFund;
  }
}
