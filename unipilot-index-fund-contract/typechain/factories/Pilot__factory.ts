/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Pilot, PilotInterface } from "../Pilot";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_timelock",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "vestingAddresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "vestingAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "authorizer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "nonce",
        type: "bytes32",
      },
    ],
    name: "AuthorizationUsed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TRANSFER_WITH_AUTHORIZATION_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "authorizationState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDomainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timelock",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "validAfter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "validBefore",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "nonce",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "transferWithAuthorization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newMinter",
        type: "address",
      },
    ],
    name: "updateMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620021553803806200215583398101604081905262000034916200036a565b6040805180820182526008815267155b9a5c1a5b1bdd60c21b60208083019182528351808501909452600584526414125313d560da1b90840152815191929162000081916003916200022d565b508051620000979060049060208401906200022d565b505050620000ac8282620000d460201b60201c565b5050600580546001600160a01b0319166001600160a01b039290921691909117905562000566565b60005b825181101562000140576200012b838281518110620000fa57620000fa6200053a565b60200260200101518383815181106200011757620001176200053a565b60200260200101516200014560201b60201c565b80620001378162000506565b915050620000d7565b505050565b6001600160a01b038216620001a05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001b49190620004ae565b90915550506001600160a01b03821660009081526020819052604081208054839290620001e3908490620004ae565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b8280546200023b90620004c9565b90600052602060002090601f0160209004810192826200025f5760008555620002aa565b82601f106200027a57805160ff1916838001178555620002aa565b82800160010185558215620002aa579182015b82811115620002aa5782518255916020019190600101906200028d565b50620002b8929150620002bc565b5090565b5b80821115620002b85760008155600101620002bd565b80516001600160a01b0381168114620002eb57600080fd5b919050565b600082601f8301126200030257600080fd5b815160206200031b620003158362000488565b62000455565b80838252828201915082860187848660051b89010111156200033c57600080fd5b60005b858110156200035d578151845292840192908401906001016200033f565b5090979650505050505050565b6000806000606084860312156200038057600080fd5b6200038b84620002d3565b602085810151919450906001600160401b0380821115620003ab57600080fd5b818701915087601f830112620003c057600080fd5b8151620003d1620003158262000488565b8082825285820191508585018b878560051b8801011115620003f257600080fd5b600095505b8386101562000420576200040b81620002d3565b835260019590950194918601918601620003f7565b5060408a015190975094505050808311156200043b57600080fd5b50506200044b86828701620002f0565b9150509250925092565b604051601f8201601f191681016001600160401b038111828210171562000480576200048062000550565b604052919050565b60006001600160401b03821115620004a457620004a462000550565b5060051b60200190565b60008219821115620004c457620004c462000524565b500190565b600181811c90821680620004de57607f821691505b602082108114156200050057634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156200051d576200051d62000524565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b611bdf80620005766000396000f3fe608060405234801561001057600080fd5b50600436106101985760003560e01c806379cc6790116100e3578063d33219b41161008c578063e3ee160e11610066578063e3ee160e146103e9578063e94a0102146103fc578063ed24911d1461042a57600080fd5b8063d33219b41461034b578063d505accf14610390578063dd62ed3e146103a357600080fd5b8063a0cc6a68116100bd578063a0cc6a68146102fe578063a457c2d714610325578063a9059cbb1461033857600080fd5b806379cc6790146102c35780637ecebe00146102d657806395d89b41146102f657600080fd5b80633408e4701161014557806342966c681161011f57806342966c68146102675780634eb03f6e1461027a57806370a082311461028d57600080fd5b80633408e47014610239578063395093511461023f57806340c10f191461025257600080fd5b806323b872dd1161017657806323b872dd146101f057806330adf81f14610203578063313ce5671461022a57600080fd5b806306fdde031461019d578063095ea7b3146101bb57806318160ddd146101de575b600080fd5b6101a56104d3565b6040516101b29190611aad565b60405180910390f35b6101ce6101c9366004611a6a565b610565565b60405190151581526020016101b2565b6002545b6040519081526020016101b2565b6101ce6101fe366004611946565b61057b565b6101e27f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b604051601281526020016101b2565b466101e2565b6101ce61024d366004611a6a565b610666565b610265610260366004611a6a565b6106af565b005b610265610275366004611a94565b61073e565b6102656102883660046118f1565b61074b565b6101e261029b3660046118f1565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6102656102d1366004611a6a565b610951565b6101e26102e43660046118f1565b60076020526000908152604090205481565b6101a5610a0a565b6101e27f7c7c6cdb67a18743f49ec6fa9b35f50d52ed05cbed4cc592e13b44501c1a226781565b6101ce610333366004611a6a565b610a19565b6101ce610346366004611a6a565b610af1565b60055461036b9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b2565b61026561039e366004611a00565b610afe565b6101e26103b1366004611913565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6102656103f7366004611982565b610c52565b6101ce61040a366004611a6a565b600860209081526000928352604080842090915290825290205460ff1681565b6101e260007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f96f8699b9d60ee03e2ae096e7ed75448335015f6b0f67e4f1540d650607f9ed97fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc646604080516020810195909552840192909252606083015260808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6060600380546104e290611b4f565b80601f016020809104026020016040519081016040528092919081815260200182805461050e90611b4f565b801561055b5780601f106105305761010080835404028352916020019161055b565b820191906000526020600020905b81548152906001019060200180831161053e57829003601f168201915b5050505050905090565b6000610572338484610eea565b50600192915050565b600061058884848461109d565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602090815260408083203384529091529020548281101561064e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61065b8533858403610eea565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916105729185906106aa908690611b20565b610eea565b60065473ffffffffffffffffffffffffffffffffffffffff163314610730576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f50494c4f543a3a204e4f545f4d494e54455200000000000000000000000000006044820152606401610645565b61073a8282611351565b5050565b6107483382611471565b50565b60055473ffffffffffffffffffffffffffffffffffffffff1633146107cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f50494c4f543a3a204e4f545f54494d454c4f434b0000000000000000000000006044820152606401610645565b60065474010000000000000000000000000000000000000000900460ff1615610877576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f50494c4f543a3a204d494e5445525f414c52454144595f494e495449414c495a60448201527f45440000000000000000000000000000000000000000000000000000000000006064820152608401610645565b73ffffffffffffffffffffffffffffffffffffffff81166108f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f50494c4f543a3a20494e56414c49445f4d494e5445525f4144445245535300006044820152606401610645565b600680547fffffffffffffffffffffff0000000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9092169190911774010000000000000000000000000000000000000000179055565b600061095d83336103b1565b9050818110156109ee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f7760448201527f616e6365000000000000000000000000000000000000000000000000000000006064820152608401610645565b6109fb8333848403610eea565b610a058383611471565b505050565b6060600480546104e290611b4f565b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915281205482811015610ada576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610645565b610ae73385858403610eea565b5060019392505050565b600061057233848461109d565b42841015610b68576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f50494c4f543a3a20415554485f455850495245440000000000000000000000006044820152606401610645565b73ffffffffffffffffffffffffffffffffffffffff87811660008181526007602081815260408084205481517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981850152808301879052968d166060880152608087018c905260a0870181905260c08088018c90528251808903909101815260e090970190915285519582019590952093909252905290610c0a906001611b20565b73ffffffffffffffffffffffffffffffffffffffff8916600090815260076020526040902055610c3d888286868661165e565b610c48888888610eea565b5050505050505050565b854211610cbb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f50494c4f543a3a20415554485f4e4f545f5945545f56414c49440000000000006044820152606401610645565b844210610d24576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f50494c4f543a3a20415554485f455850495245440000000000000000000000006044820152606401610645565b73ffffffffffffffffffffffffffffffffffffffff8916600090815260086020908152604080832087845290915290205460ff1615610dbf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50494c4f543a3a20415554485f414c52454144595f55534544000000000000006044820152606401610645565b604080517f7c7c6cdb67a18743f49ec6fa9b35f50d52ed05cbed4cc592e13b44501c1a226760208083019190915273ffffffffffffffffffffffffffffffffffffffff8c8116838501528b166060830152608082018a905260a0820189905260c0820188905260e0808301889052835180840390910181526101009092019092528051910120610e528a8286868661165e565b73ffffffffffffffffffffffffffffffffffffffff8a16600081815260086020908152604080832089845290915280822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055518792917f98de503528ee59b575ef0c0a2576a82497bfc029a5685b209e9ec333479b10a591a3610ede8a8a8a61109d565b50505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316610f8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610645565b73ffffffffffffffffffffffffffffffffffffffff821661102f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610645565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8316611140576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610645565b73ffffffffffffffffffffffffffffffffffffffff82166111e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610645565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015611299576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610645565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082208585039055918516815290812080548492906112dd908490611b20565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161134391815260200190565b60405180910390a350505050565b73ffffffffffffffffffffffffffffffffffffffff82166113ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610645565b80600260008282546113e09190611b20565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000908152602081905260408120805483929061141a908490611b20565b909155505060405181815273ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8216611514576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610645565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054818110156115ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610645565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260408120838303905560028054849290611606908490611b38565b909155505060405182815260009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600061170960007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f96f8699b9d60ee03e2ae096e7ed75448335015f6b0f67e4f1540d650607f9ed97fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc646604080516020810195909552840192909252606083015260808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281019190915260428101869052606201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa1580156117cd573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81161580159061184857508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6118ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50494c4f543a3a20494e56414c49445f5349474e4154555245000000000000006044820152606401610645565b50505050505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146118db57600080fd5b919050565b803560ff811681146118db57600080fd5b60006020828403121561190357600080fd5b61190c826118b7565b9392505050565b6000806040838503121561192657600080fd5b61192f836118b7565b915061193d602084016118b7565b90509250929050565b60008060006060848603121561195b57600080fd5b611964846118b7565b9250611972602085016118b7565b9150604084013590509250925092565b60008060008060008060008060006101208a8c0312156119a157600080fd5b6119aa8a6118b7565b98506119b860208b016118b7565b975060408a0135965060608a0135955060808a0135945060a08a013593506119e260c08b016118e0565b925060e08a013591506101008a013590509295985092959850929598565b600080600080600080600060e0888a031215611a1b57600080fd5b611a24886118b7565b9650611a32602089016118b7565b95506040880135945060608801359350611a4e608089016118e0565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215611a7d57600080fd5b611a86836118b7565b946020939093013593505050565b600060208284031215611aa657600080fd5b5035919050565b600060208083528351808285015260005b81811015611ada57858101830151858201604001528201611abe565b81811115611aec576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60008219821115611b3357611b33611ba3565b500190565b600082821015611b4a57611b4a611ba3565b500390565b600181811c90821680611b6357607f821691505b60208210811415611b9d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea164736f6c6343000807000a";

export class Pilot__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _timelock: string,
    vestingAddresses: string[],
    vestingAmounts: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Pilot> {
    return super.deploy(
      _timelock,
      vestingAddresses,
      vestingAmounts,
      overrides || {}
    ) as Promise<Pilot>;
  }
  getDeployTransaction(
    _timelock: string,
    vestingAddresses: string[],
    vestingAmounts: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _timelock,
      vestingAddresses,
      vestingAmounts,
      overrides || {}
    );
  }
  attach(address: string): Pilot {
    return super.attach(address) as Pilot;
  }
  connect(signer: Signer): Pilot__factory {
    return super.connect(signer) as Pilot__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PilotInterface {
    return new utils.Interface(_abi) as PilotInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Pilot {
    return new Contract(address, _abi, signerOrProvider) as Pilot;
  }
}
