/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { BaseContract, BigNumber, Signer, utils } from "ethers";
import { EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface IUnipilotMigratorInterface extends utils.Interface {
  functions: {};

  events: {
    "LiquidityMigratedFromV2(address,address,address,uint256,uint256)": EventFragment;
    "LiquidityMigratedFromV3(address,address,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "LiquidityMigratedFromV2"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LiquidityMigratedFromV3"): EventFragment;
}

export type LiquidityMigratedFromV2Event = TypedEvent<
  [string, string, string, BigNumber, BigNumber],
  {
    pool: string;
    vault: string;
    owner: string;
    amount0: BigNumber;
    amount1: BigNumber;
  }
>;

export type LiquidityMigratedFromV2EventFilter =
  TypedEventFilter<LiquidityMigratedFromV2Event>;

export type LiquidityMigratedFromV3Event = TypedEvent<
  [string, string, BigNumber, BigNumber],
  { vault: string; owner: string; amount0: BigNumber; amount1: BigNumber }
>;

export type LiquidityMigratedFromV3EventFilter =
  TypedEventFilter<LiquidityMigratedFromV3Event>;

export interface IUnipilotMigrator extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IUnipilotMigratorInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "LiquidityMigratedFromV2(address,address,address,uint256,uint256)"(
      pool?: null,
      vault?: null,
      owner?: null,
      amount0?: null,
      amount1?: null
    ): LiquidityMigratedFromV2EventFilter;
    LiquidityMigratedFromV2(
      pool?: null,
      vault?: null,
      owner?: null,
      amount0?: null,
      amount1?: null
    ): LiquidityMigratedFromV2EventFilter;

    "LiquidityMigratedFromV3(address,address,uint256,uint256)"(
      vault?: null,
      owner?: null,
      amount0?: null,
      amount1?: null
    ): LiquidityMigratedFromV3EventFilter;
    LiquidityMigratedFromV3(
      vault?: null,
      owner?: null,
      amount0?: null,
      amount1?: null
    ): LiquidityMigratedFromV3EventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
