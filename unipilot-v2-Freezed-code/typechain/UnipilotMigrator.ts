/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export type MigrateV2ParamsStruct = {
  pair: string;
  vault: string;
  token0: string;
  token1: string;
  fee: BigNumberish;
  percentageToMigrate: BigNumberish;
  liquidityToMigrate: BigNumberish;
  unipilotTokenId: BigNumberish;
  refundAsETH: boolean;
};

export type MigrateV2ParamsStructOutput = [
  string,
  string,
  string,
  string,
  number,
  number,
  BigNumber,
  BigNumber,
  boolean
] & {
  pair: string;
  vault: string;
  token0: string;
  token1: string;
  fee: number;
  percentageToMigrate: number;
  liquidityToMigrate: BigNumber;
  unipilotTokenId: BigNumber;
  refundAsETH: boolean;
};

export type MigrateV3ParamsStruct = {
  vault: string;
  token0: string;
  token1: string;
  fee: BigNumberish;
  recipient: string;
  tokenId: BigNumberish;
  refundAsETH: boolean;
};

export type MigrateV3ParamsStructOutput = [
  string,
  string,
  string,
  number,
  string,
  BigNumber,
  boolean
] & {
  vault: string;
  token0: string;
  token1: string;
  fee: number;
  recipient: string;
  tokenId: BigNumber;
  refundAsETH: boolean;
};

export interface UnipilotMigratorInterface extends utils.Interface {
  functions: {
    "migrateLixirLiquidity((address,address,address,address,uint24,uint8,uint256,uint256,bool))": FunctionFragment;
    "migratePopsicleLiquidity((address,address,address,address,uint24,uint8,uint256,uint256,bool))": FunctionFragment;
    "migrateUnipilotLiquididty((address,address,address,uint24,address,uint256,bool))": FunctionFragment;
    "migrateV2Liquidity((address,address,address,address,uint24,uint8,uint256,uint256,bool))": FunctionFragment;
    "migrateV3Liquidity((address,address,address,uint24,address,uint256,bool))": FunctionFragment;
    "migrateVisorLiquidity((address,address,address,address,uint24,uint8,uint256,uint256,bool))": FunctionFragment;
    "onERC721Received(address,address,uint256,bytes)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "migrateLixirLiquidity",
    values: [MigrateV2ParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "migratePopsicleLiquidity",
    values: [MigrateV2ParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "migrateUnipilotLiquididty",
    values: [MigrateV3ParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "migrateV2Liquidity",
    values: [MigrateV2ParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "migrateV3Liquidity",
    values: [MigrateV3ParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "migrateVisorLiquidity",
    values: [MigrateV2ParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC721Received",
    values: [string, string, BigNumberish, BytesLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "migrateLixirLiquidity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "migratePopsicleLiquidity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "migrateUnipilotLiquididty",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "migrateV2Liquidity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "migrateV3Liquidity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "migrateVisorLiquidity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC721Received",
    data: BytesLike
  ): Result;

  events: {
    "LiquidityMigratedFromV2(address,address,address,uint256,uint256)": EventFragment;
    "LiquidityMigratedFromV3(address,address,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "LiquidityMigratedFromV2"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LiquidityMigratedFromV3"): EventFragment;
}

export type LiquidityMigratedFromV2Event = TypedEvent<
  [string, string, string, BigNumber, BigNumber],
  {
    pool: string;
    vault: string;
    owner: string;
    amount0: BigNumber;
    amount1: BigNumber;
  }
>;

export type LiquidityMigratedFromV2EventFilter =
  TypedEventFilter<LiquidityMigratedFromV2Event>;

export type LiquidityMigratedFromV3Event = TypedEvent<
  [string, string, BigNumber, BigNumber],
  { vault: string; owner: string; amount0: BigNumber; amount1: BigNumber }
>;

export type LiquidityMigratedFromV3EventFilter =
  TypedEventFilter<LiquidityMigratedFromV3Event>;

export interface UnipilotMigrator extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: UnipilotMigratorInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    migrateLixirLiquidity(
      params: MigrateV2ParamsStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    migratePopsicleLiquidity(
      params: MigrateV2ParamsStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    migrateUnipilotLiquididty(
      params: MigrateV3ParamsStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    migrateV2Liquidity(
      params: MigrateV2ParamsStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    migrateV3Liquidity(
      params: MigrateV3ParamsStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    migrateVisorLiquidity(
      params: MigrateV2ParamsStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    onERC721Received(
      operator: string,
      from: string,
      tokenId: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  migrateLixirLiquidity(
    params: MigrateV2ParamsStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  migratePopsicleLiquidity(
    params: MigrateV2ParamsStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  migrateUnipilotLiquididty(
    params: MigrateV3ParamsStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  migrateV2Liquidity(
    params: MigrateV2ParamsStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  migrateV3Liquidity(
    params: MigrateV3ParamsStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  migrateVisorLiquidity(
    params: MigrateV2ParamsStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  onERC721Received(
    operator: string,
    from: string,
    tokenId: BigNumberish,
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    migrateLixirLiquidity(
      params: MigrateV2ParamsStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    migratePopsicleLiquidity(
      params: MigrateV2ParamsStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    migrateUnipilotLiquididty(
      params: MigrateV3ParamsStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    migrateV2Liquidity(
      params: MigrateV2ParamsStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    migrateV3Liquidity(
      params: MigrateV3ParamsStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    migrateVisorLiquidity(
      params: MigrateV2ParamsStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    onERC721Received(
      operator: string,
      from: string,
      tokenId: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {
    "LiquidityMigratedFromV2(address,address,address,uint256,uint256)"(
      pool?: null,
      vault?: null,
      owner?: null,
      amount0?: null,
      amount1?: null
    ): LiquidityMigratedFromV2EventFilter;
    LiquidityMigratedFromV2(
      pool?: null,
      vault?: null,
      owner?: null,
      amount0?: null,
      amount1?: null
    ): LiquidityMigratedFromV2EventFilter;

    "LiquidityMigratedFromV3(address,address,uint256,uint256)"(
      vault?: null,
      owner?: null,
      amount0?: null,
      amount1?: null
    ): LiquidityMigratedFromV3EventFilter;
    LiquidityMigratedFromV3(
      vault?: null,
      owner?: null,
      amount0?: null,
      amount1?: null
    ): LiquidityMigratedFromV3EventFilter;
  };

  estimateGas: {
    migrateLixirLiquidity(
      params: MigrateV2ParamsStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    migratePopsicleLiquidity(
      params: MigrateV2ParamsStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    migrateUnipilotLiquididty(
      params: MigrateV3ParamsStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    migrateV2Liquidity(
      params: MigrateV2ParamsStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    migrateV3Liquidity(
      params: MigrateV3ParamsStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    migrateVisorLiquidity(
      params: MigrateV2ParamsStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    onERC721Received(
      operator: string,
      from: string,
      tokenId: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    migrateLixirLiquidity(
      params: MigrateV2ParamsStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    migratePopsicleLiquidity(
      params: MigrateV2ParamsStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    migrateUnipilotLiquididty(
      params: MigrateV3ParamsStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    migrateV2Liquidity(
      params: MigrateV2ParamsStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    migrateV3Liquidity(
      params: MigrateV3ParamsStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    migrateVisorLiquidity(
      params: MigrateV2ParamsStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    onERC721Received(
      operator: string,
      from: string,
      tokenId: BigNumberish,
      data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
