/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { V3Migrator, V3MigratorInterface } from "../V3Migrator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WETH9",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nonfungiblePositionManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WETH9",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "createAndInitializePoolIfNecessary",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pair",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "liquidityToMigrate",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "percentageToMigrate",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "amount0Min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1Min",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "refundAsETH",
            type: "bool",
          },
        ],
        internalType: "struct IV3Migrator.MigrateParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "nonfungiblePositionManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "selfPermit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "selfPermitAllowed",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "selfPermitAllowedIfNecessary",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "selfPermitIfNecessary",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b50604051620019f1380380620019f1833981016040819052620000349162000079565b6001600160601b0319606093841b811660805291831b821660a05290911b1660c052620000c2565b80516001600160a01b03811681146200007457600080fd5b919050565b6000806000606084860312156200008e578283fd5b62000099846200005c565b9250620000a9602085016200005c565b9150620000b9604085016200005c565b90509250925092565b60805160601c60a05160601c60c05160601c6118c36200012e600039806107625280610a2d5280610a675280610a915280610c3a525080609552806105665280610c865280610cdd5280610db85280610e0f5250806101f852806102bf528061081552506118c36000f3fe6080604052600436106100855760003560e01c806313ead562146100e25780634659a4941461010b5780634aa4a4fc1461011e578063a4a78f0c14610133578063ac9650d814610146578063b44a272214610166578063c2e3140a1461017b578063c45a01551461018e578063d44f2bf2146101a3578063f3995c67146101c3576100dd565b366100dd57336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146100db5760405162461bcd60e51b81526004016100d29061170d565b60405180910390fd5b005b600080fd5b6100f56100f0366004611314565b6101d6565b6040516101029190611634565b60405180910390f35b6100db61011936600461136d565b6104ca565b34801561012a57600080fd5b506100f5610564565b6100db61014136600461136d565b610588565b6101596101543660046113c6565b610621565b604051610102919061166c565b34801561017257600080fd5b506100f5610760565b6100db61018936600461136d565b610784565b34801561019a57600080fd5b506100f5610813565b3480156101af57600080fd5b506100db6101be366004611523565b610837565b6100db6101d136600461136d565b610ea3565b6000836001600160a01b0316856001600160a01b0316106101f657600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631698ee828686866040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018262ffffff168152602001935050505060206040518083038186803b15801561028157600080fd5b505afa158015610295573d6000803e3d6000fd5b505050506040513d60208110156102ab57600080fd5b505190506001600160a01b0381166103e1577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a16712958686866040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018262ffffff1681526020019350505050602060405180830381600087803b15801561034a57600080fd5b505af115801561035e573d6000803e3d6000fd5b505050506040513d602081101561037457600080fd5b50516040805163f637731d60e01b81526001600160a01b03858116600483015291519293509083169163f637731d9160248082019260009290919082900301818387803b1580156103c457600080fd5b505af11580156103d8573d6000803e3d6000fd5b505050506104c2565b6000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561041c57600080fd5b505afa158015610430573d6000803e3d6000fd5b505050506040513d60e081101561044657600080fd5b505190506001600160a01b0381166104c057816001600160a01b031663f637731d846040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b1580156104a757600080fd5b505af11580156104bb573d6000803e3d6000fd5b505050505b505b949350505050565b604080516323f2ebc360e21b815233600482015230602482015260448101879052606481018690526001608482015260ff851660a482015260c4810184905260e4810183905290516001600160a01b03881691638fcbaf0c9161010480830192600092919082900301818387803b15801561054457600080fd5b505af1158015610558573d6000803e3d6000fd5b50505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60408051636eb1769f60e11b81523360048201523060248201529051600019916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b1580156105d957600080fd5b505afa1580156105ed573d6000803e3d6000fd5b505050506040513d602081101561060357600080fd5b50511015610619576106198686868686866104ca565b505050505050565b6060816001600160401b038111801561063957600080fd5b5060405190808252806020026020018201604052801561066d57816020015b60608152602001906001900390816106585790505b50905060005b82811015610759576000803086868581811061068b57fe5b905060200281019061069d9190611815565b6040516106ab929190611624565b600060405180830381855af49150503d80600081146106e6576040519150601f19603f3d011682016040523d82523d6000602084013e6106eb565b606091505b5091509150816107375760448151101561070457600080fd5b6004810190508080602001905181019061071e919061148d565b60405162461bcd60e51b81526004016100d291906116cc565b8084848151811061074457fe5b60209081029190910101525050600101610673565b5092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60408051636eb1769f60e11b8152336004820152306024820152905186916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b1580156107d357600080fd5b505afa1580156107e7573d6000803e3d6000fd5b505050506040513d60208110156107fd57600080fd5b5051101561061957610619868686868686610ea3565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061084960608301604084016115c1565b60ff16116108695760405162461bcd60e51b81526004016100d2906116df565b606461087b60608301604084016115c1565b60ff16111561089c5760405162461bcd60e51b81526004016100d290611730565b6108a960208201826112f1565b6001600160a01b03166323b872dd336108c560208501856112f1565b84602001356040518463ffffffff1660e01b81526004016108e893929190611648565b602060405180830381600087803b15801561090257600080fd5b505af1158015610916573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093a9190611450565b5060008061094b60208401846112f1565b6001600160a01b03166389afcb44306040518263ffffffff1660e01b81526004016109769190611634565b6040805180830381600087803b15801561098f57600080fd5b505af11580156109a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c7919061159e565b9092509050600060646109ed6109e360608701604088016115c1565b859060ff16610f15565b816109f457fe5b04905060006064610a0e6109e360608801604089016115c1565b81610a1557fe5b049050610a52610a2b60808701606088016112f1565b7f000000000000000000000000000000000000000000000000000000000000000084610f3f565b610a8c610a6560a08701608088016112f1565b7f000000000000000000000000000000000000000000000000000000000000000083610f3f565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663883164566040518061016001604052808a6060016020810190610add91906112f1565b6001600160a01b03168152602001610afb60a08c0160808d016112f1565b6001600160a01b03168152602001610b1960c08c0160a08d0161153b565b62ffffff168152602001610b3360e08c0160c08d0161146c565b60020b8152602001610b4c6101008c0160e08d0161146c565b60020b815260208101889052604081018790526101008b013560608201526101208b0135608082015260a001610b8a6101608c016101408d016112f1565b6001600160a01b031681526020018a61016001358152506040518263ffffffff1660e01b8152600401610bbd919061175e565b608060405180830381600087803b158015610bd757600080fd5b505af1158015610beb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0f9190611555565b93509350505085821015610d6f5783821015610c6057610c60610c386080890160608a016112f1565b7f00000000000000000000000000000000000000000000000000000000000000006000610f3f565b818603610c756101a089016101808a01611434565b8015610cc157506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610cb660808a0160608b016112f1565b6001600160a01b0316145b15610d5357604051632e1a7d4d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632e1a7d4d90610d1290849060040161180c565b600060405180830381600087803b158015610d2c57600080fd5b505af1158015610d40573d6000803e3d6000fd5b50505050610d4e338261108d565b610d6d565b610d6d610d6660808a0160608b016112f1565b3383611181565b505b84811015610e9a5782811015610d9257610d92610c3860a0890160808a016112f1565b808503610da76101a089016101808a01611434565b8015610df357506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610de860a08a0160808b016112f1565b6001600160a01b0316145b15610e8557604051632e1a7d4d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632e1a7d4d90610e4490849060040161180c565b600060405180830381600087803b158015610e5e57600080fd5b505af1158015610e72573d6000803e3d6000fd5b50505050610e80338261108d565b610e98565b610e98610d6660a08a0160808b016112f1565b505b50505050505050565b6040805163d505accf60e01b8152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c4810183905290516001600160a01b0388169163d505accf9160e480830192600092919082900301818387803b15801561054457600080fd5b6000821580610f3057505081810281838281610f2d57fe5b04145b610f3957600080fd5b92915050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b1781529251825160009485949389169392918291908083835b60208310610fbb5780518252601f199092019160209182019101610f9c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461101d576040519150601f19603f3d011682016040523d82523d6000602084013e611022565b606091505b5091509150818015611050575080511580611050575080806020019051602081101561104d57600080fd5b50515b611086576040805162461bcd60e51b8152602060048201526002602482015261534160f01b604482015290519081900360640190fd5b5050505050565b604080516000808252602082019092526001600160a01b0384169083906040518082805190602001908083835b602083106110d95780518252601f1990920191602091820191016110ba565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461113b576040519150601f19603f3d011682016040523d82523d6000602084013e611140565b606091505b505090508061117c576040805162461bcd60e51b815260206004820152600360248201526253544560e81b604482015290519081900360640190fd5b505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825160009485949389169392918291908083835b602083106111fd5780518252601f1990920191602091820191016111de565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461125f576040519150601f19603f3d011682016040523d82523d6000602084013e611264565b606091505b5091509150818015611292575080511580611292575080806020019051602081101561128f57600080fd5b50515b611086576040805162461bcd60e51b815260206004820152600260248201526114d560f21b604482015290519081900360640190fd5b803562ffffff811681146112db57600080fd5b919050565b803560ff811681146112db57600080fd5b600060208284031215611302578081fd5b813561130d81611890565b9392505050565b60008060008060808587031215611329578283fd5b843561133481611890565b9350602085013561134481611890565b9250611352604086016112c8565b9150606085013561136281611890565b939692955090935050565b60008060008060008060c08789031215611385578182fd5b863561139081611890565b955060208701359450604087013593506113ac606088016112e0565b92506080870135915060a087013590509295509295509295565b600080602083850312156113d8578182fd5b82356001600160401b03808211156113ee578384fd5b818501915085601f830112611401578384fd5b81358181111561140f578485fd5b8660208083028501011115611422578485fd5b60209290920196919550909350505050565b600060208284031215611445578081fd5b813561130d816118a8565b600060208284031215611461578081fd5b815161130d816118a8565b60006020828403121561147d578081fd5b81358060020b811461130d578182fd5b60006020828403121561149e578081fd5b81516001600160401b03808211156114b4578283fd5b818401915084601f8301126114c7578283fd5b8151818111156114d357fe5b604051601f8201601f1916810160200183811182821017156114f157fe5b604052818152838201602001871015611508578485fd5b611519826020830160208701611860565b9695505050505050565b60006101a08284031215611535578081fd5b50919050565b60006020828403121561154c578081fd5b61130d826112c8565b6000806000806080858703121561156a578384fd5b845160208601519094506001600160801b0381168114611588578384fd5b6040860151606090960151949790965092505050565b600080604083850312156115b0578182fd5b505080516020909101519092909150565b6000602082840312156115d2578081fd5b61130d826112e0565b6001600160a01b03169052565b60008151808452611600816020860160208601611860565b601f01601f19169290920160200192915050565b60020b9052565b62ffffff169052565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000602080830181845280855180835260408601915060408482028701019250838701855b828110156116bf57603f198886030184526116ad8583516115e8565b94509285019290850190600101611691565b5092979650505050505050565b60006020825261130d60208301846115e8565b60208082526014908201527314195c98d95b9d1859d9481d1bdbc81cdb585b1b60621b604082015260600190565b6020808252600990820152684e6f7420574554483960b81b604082015260600190565b60208082526014908201527350657263656e7461676520746f6f206c6172676560601b604082015260600190565b6000610160820190506117728284516115db565b602083015161178460208401826115db565b506040830151611797604084018261161b565b5060608301516117aa6060840182611614565b5060808301516117bd6080840182611614565b5060a083015160a083015260c083015160c083015260e083015160e0830152610100808401518184015250610120808401516117fb828501826115db565b505061014092830151919092015290565b90815260200190565b6000808335601e1984360301811261182b578283fd5b8301803591506001600160401b03821115611844578283fd5b60200191503681900382131561185957600080fd5b9250929050565b60005b8381101561187b578181015183820152602001611863565b8381111561188a576000848401525b50505050565b6001600160a01b03811681146118a557600080fd5b50565b80151581146118a557600080fdfea164736f6c6343000706000a";

type V3MigratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: V3MigratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class V3Migrator__factory extends ContractFactory {
  constructor(...args: V3MigratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _factory: string,
    _WETH9: string,
    _nonfungiblePositionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<V3Migrator> {
    return super.deploy(
      _factory,
      _WETH9,
      _nonfungiblePositionManager,
      overrides || {}
    ) as Promise<V3Migrator>;
  }
  getDeployTransaction(
    _factory: string,
    _WETH9: string,
    _nonfungiblePositionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _factory,
      _WETH9,
      _nonfungiblePositionManager,
      overrides || {}
    );
  }
  attach(address: string): V3Migrator {
    return super.attach(address) as V3Migrator;
  }
  connect(signer: Signer): V3Migrator__factory {
    return super.connect(signer) as V3Migrator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): V3MigratorInterface {
    return new utils.Interface(_abi) as V3MigratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): V3Migrator {
    return new Contract(address, _abi, signerOrProvider) as V3Migrator;
  }
}
